version: '3.9'

platform: linux/arm64/v8

logger: &logger-link
  options:
    max-size: '50m'
  driver: json-file

services:
  mariadb:
    container_name: mariadb
    build: ./requirements/mariadb
    image: mariadb
    restart: always
    # init: true
    networks:
      - intercom
    volumes:
      - mdb_pv:/var/lib/mysql
    # environment:
    env_file:
      - .env
    healthcheck:
      test: [ 'CMD', 'mysqladmin', 'ping', '--silent', '-p${MYSQL_ROOT_PASSWORD:? Root pswd required for MariaDB}' ]
      start_period: 1m
      retries: 3
    logging: *logger-link

  wordpress:
    container_name: wordpress
    build: ./requirements/wordpress
    image: wordpress
    restart: always
    # init: true
    networks:
      - intercom
    volumes: &wp-volume
      - wp_pv:/var/www/html/wordpress
    # environment:
    env_file:
      - .env
    healthcheck:
      test: #php-fpm daemon test using status\ping
      start_period: 1m
      retries: 3
    depends_on:
      mariadb:
        condition: service_healthy
    logging: *logger-link

  nginx:
    container_name: nginx
    build: ./requirements/nginx
    image: nginx
    restart: always
    # init: true
    networks:
      - intercom
    volumes: 
      <<: *wp-volume
      - resume_pv:/var/www/html/resume
      - certs_pv:/var/www/certs
    ports:
      - 443:443
    # environment:
    env_file:
      - .env
    healthcheck:
      test: [ 'CMD', 'curl' '-kf' 'https://${DOMAIN_NAME}/healthcheck' ] # won't work without changes in nginx.conf
      start_period: 15s
      retries: 3
    depends_on:
      wordpress:
        condition: service_healthy
    logging: *logger-link

 adminer:
    container_name: adminer
    build: ./requirements/bonus/adminer
    image: adminer
    restart: always
    # init: true
    networks:
      - intercom
    healthcheck:
      test: #php-fpm daemon test using status\ping
      start_period: 1m
      retries: 3
    depends_on:
      mariadb:
        condition: service_healthy
    logging: *logger-link

  redis:
    container_name: redis
    build: ./requirements/bonus/redis
    image: redis
    restart: always
    # init: true
    networks:
      - intercom
    healthcheck:
      test: #php-fpm daemon test using status\ping
      start_period: 1m
      retries: 3
    depends_on:
      wordpress:
        condition: service_healthy
    logging: *logger-link
  
  ftps:
    container_name: ftps
    build: ./requirements/bonus/ftps
    image: ftps
    restart: always
    # init: true
    networks:
      - intercom
    # environment:
    volumes:
      <<: *wp-volume
      - certs_pv:${CERTS_DIR:? certs dir must be specified}
    ports:
      - 21:21
      - 10000-10100:10000-10100
    depends_on:
      wordpress:
        condition: service_healthy
    logging: *logger-link

  prometheus:
    container_name: prometheus
    build: ./requirements/bonus/prometheus
    image: prometheus
    # init: true
    volumes: # better copy config in the docker file
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    commands:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    logging: *logger-link
  
  cadvisor:
    container_name: cadvisor
    build: ./requirements/bonus/cadvisor
    image: cadvisor
    # init: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk:/dev/disk/:ro
    ports:
      - 8080:8080
    logging: *logger-link

volumes:
  mdb_pv:
    name: mdb_pv
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PV_MDB_PATH:? mariadb volume path must be specified}
  wp_pv:
    name: wp_pv
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PV_WP_PATH:? wordpress volume path must be specified}
  resume_pv:
    name: resume_pv
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PV_RESUME_PATH:? resume volume path must be specified}
  certs_pv:
    name: certs_pv
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PV_CERTS_PATH:? certs volume path must be specified}

networks:
  intercom:
    driver: bridge