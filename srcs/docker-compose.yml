version: '3.9'

x-logger: &logger-link
  options:
    max-size: '50m'
  driver: json-file

x-env-ngx: &env-ngx-link
  DOMAIN_IP: ${DOMAIN_IP:? DOMAIN_IP is required }
  DOMAIN_NAME: ${DOMAIN_NAME:? DOMAIN_NAME is required }

x-env-mdb: &env-mdb-link
  MYSQL_HOST: ${MYSQL_HOST:? MYSQL_HOST is required }
  MYSQL_USER_NAME: ${MYSQL_USER_NAME:? MYSQL_USER_NAME is required }
  MYSQL_USER_PASS: ${MYSQL_USER_PASS:? MYSQL_USER_PASS is required }
  MYSQL_ROOT_PASS: ${MYSQL_ROOT_PASS:? MYSQL_ROOT_PASS is required }

x-env-wp: &env-wp-link
  WP_URL: ${WP_URL:? WP_URL is required }
  WP_TITLE: ${WP_TITLE:? WP_TITLE is required }
  WP_DB_NAME: ${WP_DB_NAME:? WP_DB_NAME is required }
  WP_USER_NAME: ${WP_USER_NAME:? WP_USER_NAME is required }
  WP_USER_PASS: ${WP_USER_PASS:? WP_USER_PASS is required }
  WP_USER_EMAIL: ${WP_USER_EMAIL:? WP_USER_EMAIL is required }
  WP_ADMIN_NAME: ${WP_ADMIN_NAME:? WP_ADMIN_NAME is required }
  WP_ADMIN_PASS: ${WP_ADMIN_PASS:? WP_ADMIN_PASS is required }
  WP_ADMIN_EMAIL: ${WP_ADMIN_EMAIL:? WP_ADMIN_EMAIL is required }

x-env-ftps: &env-ftps-link
  FTPS_ROOT_DIR:  ${FTPS_ROOT_DIR:? FTPS_ROOT_DIR is required }
  FTPS_USER_NAME: ${FTPS_USER_NAME:? FTPS_USER_NAME is required }
  FTPS_USER_PASS: ${FTPS_USER_PASS:? FTPS_USER_PASS is required }
  FTPS_PPORT_MIN: ${FTPS_PPORT_MIN:? FTPS_PPORT_MIN is required }
  FTPS_PPORT_MAX: ${FTPS_PPORT_MAX:? FTPS_PPORT_MAX is required }

services:
  mariadb:
    platform: linux/arm64/v8
    container_name: mariadb
    build: ./requirements/mariadb
    image: mariadb
    restart: on-failure
    init: true
    networks:
      - intercom
    volumes:
      - mdb_pv:/var/lib/mysql
    environment: *env-mdb-link
    healthcheck:
      test: [ 'CMD', 'mysqladmin', 'ping', '--silent', '-u', '${MYSQL_USER_NAME}', '-p${MYSQL_USER_PASS}' ]
      start_period: 1m
      interval: 30s
      timeout: 30s
      retries: 3
    logging: *logger-link

  wordpress:
    platform: linux/arm64/v8
    container_name: wordpress
    build: ./requirements/wordpress
    image: wordpress
    restart: on-failure
    init: true
    # tty: true
    networks:
      - intercom
    volumes:
      - wp_pv:/var/www/html/wordpress
    environment:
      <<: *env-mdb-link
      <<: *env-wp-link
    # healthcheck:
    #   test: #php-fpm daemon test using status\ping
    #   start_period: 1m
    #   retries: 3
    depends_on:
      mariadb:
        condition: service_healthy
    logging: *logger-link

  nginx:
    platform: linux/arm64/v8
    container_name: nginx
    build: ./requirements/nginx
    image: nginx
    restart: on-failure
    init: true
    networks:
      - intercom
    volumes: 
      - wp_pv:/var/www/html/wordpress
      - resume_pv:/var/www/html/resume:ro
      - certs_pv:${CERTS_DIR:? CERTS_DIR is required}:ro
    environment: *env-ngx-link
    ports:
      - 443:443
    healthcheck:
      test: [ 'CMD', 'curl', '-kf', 'https://${DOMAIN_NAME}/healthcheck' ]
      start_period: 15s
      retries: 3
    depends_on:
      wordpress:
        condition: service_started
        # condition: service_healthy
    logging: *logger-link

  # adminer:
  #   platform: linux/arm64/v8
  #   container_name: adminer
  #   build: ./requirements/bonus/adminer
  #   image: adminer
  #   restart: always
  #   init: true
  #   networks:
  #     - intercom
  #   # healthcheck:
  #   #   test: #php-fpm daemon test using status\ping
  #   #   start_period: 1m
  #   #   retries: 3
  #   depends_on:
  #     mariadb:
  #       condition: service_healthy
  #   logging: *logger-link

  # redis:
  #   platform: linux/arm64/v8
  #   container_name: redis
  #   build: ./requirements/bonus/redis
  #   image: redis
  #   restart: always
  #   init: true
  #   networks:
  #     - intercom
  #   healthcheck:
  #     test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
  #     start_period: 1m
  #     retries: 3
  #   depends_on:
  #     wordpress:
  #       condition: service_healthy
  #   logging: *logger-link
  
  # ftps:
  #   platform: linux/arm64/v8
  #   container_name: ftps
  #   build: ./requirements/bonus/ftps
  #   image: ftps
  #   restart: always
  #   init: true
  #   networks:
  #     - intercom
  #   environment: *env-ftps-link
  #   volumes:
  #     - wp_pv:/var/www/html/wordpress
  #     - certs_pv:${CERTS_DIR:? CERTS_DIR is required}:ro
  #   ports:
  #     - 21:21
  #     - ${FTPS_PPORT_MIN}-${FTPS_PPORT_MAX}:${FTPS_PPORT_MIN}-${FTPS_PPORT_MAX}
  #   depends_on:
  #     wordpress:
  #       condition: service_healthy
  #   logging: *logger-link

  # prometheus:
  #   platform: linux/arm64/v8
  #   container_name: prometheus
  #   build: ./requirements/bonus/prometheus
  #   image: prometheus
  #   init: true
  #   ports:
  #     - ${PROMETHEUS_PORT:? PROMETHEUS_PORT is required}:${PROMETHEUS_PORT}
  #   logging: *logger-link
  
  # cadvisor:
  #   platform: linux/arm64/v8
  #   container_name: cadvisor
  #   build: ./requirements/bonus/cadvisor
  #   image: cadvisor
  #   init: true
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:ro
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #     - /dev/disk:/dev/disk/:ro
  #   expose: 
  #     - ${CADVISOR_PORT:? CADVISOR_PORT is required}
  #   healthcheck:
  #     test: [ 'CMD', 'wget', '--quiet', '--spider', 'http://localhost:${CADVISOR_PORT}/healthz' ]
  #     interval: 30s
  #     timeout: 3s
  #     retries: 3
  #     start_period: 1m
  #   logging: *logger-link

volumes:
  wp_pv:
    name: wp_pv
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PV_WP_PATH:? PV_WP_PATH is required }
  mdb_pv:
    name: mdb_pv
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PV_MDB_PATH:? PV_MDB_PATH is required }
  certs_pv:
    name: certs_pv
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PV_CERTS_PATH:? PV_CERTS_PATH is required }
  resume_pv:
    name: resume_pv
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PV_RESUME_PATH:? PV_RESUME_PATH is required }

networks:
  intercom:
    driver: bridge